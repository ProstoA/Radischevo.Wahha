<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
		<sectionGroup name="radischevo.wahha">
			<section name="core" type="Radischevo.Wahha.Core.Configurations.SettingsSection,Radischevo.Wahha.Core"/>
			<section name="data" type="Radischevo.Wahha.Data.Configurations.SettingsSection,Radischevo.Wahha.Data"/>
		</sectionGroup>
	</configSections>
	<radischevo.wahha>
		<core>
			<serviceLocation provider="ConsoleTester.UnityServiceLocator,ConsoleTester"/>
		</core>
		<data>
			<!--<cache>
				<provider type="Radischevo.Wahha.Data.Caching.ICacheProvider,Radischevo.Wahha.Data"/>
				<settings>
					<add name="timeout" value="15"/>
				</settings>
			</cache>-->
			<providers commandTimeout="20">
				<add name="sql" type="Radischevo.Wahha.Data.Provider.SqlDbDataProvider,Radischevo.Wahha.Data" default="true"/>
			</providers>
			<connectionStrings>
				<add name="default" connectionString="server=iceberg\sqlexpress;initial catalog=workle.data;user id=developer;password=Maxpass5;"/>
			</connectionStrings>
		</data>
	</radischevo.wahha>
	<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
		<alias alias="IDbDataProviderFactory" type="Radischevo.Wahha.Data.IDbDataProviderFactory,Radischevo.Wahha.Data"/>
		<alias alias="UnityDbDataProviderFactory" type="ConsoleTester.UnityDbDataProviderFactory,ConsoleTester"/>
		
		<alias alias="IDbDataProvider" type="Radischevo.Wahha.Data.IDbDataProvider,Radischevo.Wahha.Data"/>
		<alias alias="SqlDbDataProvider" type="Radischevo.Wahha.Data.Provider.SqlDbDataProvider,Radischevo.Wahha.Data"/>

		<alias alias="ICacheProvider" type="Radischevo.Wahha.Data.Caching.ICacheProvider,Radischevo.Wahha.Data"/>
		<alias alias="NullCacheProvider" type="Radischevo.Wahha.Data.Caching.NullCacheProvider,Radischevo.Wahha.Data"/>

		<alias alias="IItemRepository" type="ConsoleTester.IItemRepository,ConsoleTester"/>
		<alias alias="IItemMaterializer" type="Radischevo.Wahha.Data.IDbMaterializer`1[[ConsoleTester.Item,ConsoleTester]],Radischevo.Wahha.Data"/>
		<alias alias="IItemDataRepository" type="ConsoleTester.IItemDataRepository,ConsoleTester"/>
		<alias alias="IItemDataMaterializer" type="Radischevo.Wahha.Data.IDbMaterializer`1[[ConsoleTester.ItemData,ConsoleTester]],Radischevo.Wahha.Data"/>
		<alias alias="ItemRepository" type="ConsoleTester.ItemRepository,ConsoleTester"/>
		<alias alias="ItemMaterializer" type="ConsoleTester.ItemMaterializer,ConsoleTester"/>
		<alias alias="ItemDataRepository" type="ConsoleTester.ItemDataRepository,ConsoleTester"/>
		<alias alias="ItemDataMaterializer" type="ConsoleTester.ItemDataMaterializer,ConsoleTester"/>
		
		<container name="default">
			<register type="IDbDataProvider" mapTo="SqlDbDataProvider"/>
			<register type="ICacheProvider" mapTo="NullCacheProvider"/>
			<register type="IDbDataProviderFactory" mapTo="UnityDbDataProviderFactory"/>
			
			<register type="IItemDataMaterializer" mapTo="ItemDataMaterializer">
				<lifetime type="singleton"/>
			</register>
			<register type="IItemMaterializer" mapTo="ItemMaterializer">
				<lifetime type="singleton"/>
			</register>

			<register type="IItemRepository" mapTo="ItemRepository">
				<lifetime type="perthread"/>
				<constructor>
					<param name="materializer" dependencyType="IItemMaterializer"/>
				</constructor>
			</register>
			<register type="IItemDataRepository" mapTo="ItemDataRepository">
				<lifetime type="perthread"/>
				<constructor>
					<param name="materializer" dependencyType="IItemDataMaterializer"/>
				</constructor>
			</register>
		</container>
	</unity>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
