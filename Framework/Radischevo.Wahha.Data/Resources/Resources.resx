<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_AmbiguousColumnName" xml:space="preserve">
    <value>Ambiguous column name '{0}' found in the data record.</value>
  </data>
  <data name="Error_ArrayTypeIsNotSupported" xml:space="preserve">
    <value>Array type '{0}' is not supported.</value>
  </data>
  <data name="Error_CacheProviderDoesNotSupportTags" xml:space="preserve">
    <value>The currently configured cache provider '{0}' does not support item tagging.</value>
  </data>
  <data name="Error_CannotEnumerateMoreThanOnce" xml:space="preserve">
    <value>Cannot enumerate the result set more than once.</value>
  </data>
  <data name="Error_CircularReferenceFoundAtType" xml:space="preserve">
    <value>Circular reference found at type '{0}'.</value>
  </data>
  <data name="Error_ColumnNameDoesNotExistInResultSet" xml:space="preserve">
    <value>Could not find a field with the specified name '{0}' in the result set.</value>
  </data>
  <data name="Error_ColumnOrdinalDoesNotExistInResultSet" xml:space="preserve">
    <value>Could not find a field with the specified ordinal '{0}' in the result set.</value>
  </data>
  <data name="Error_CommandIsNotInitialized" xml:space="preserve">
    <value>The database query command must be initialized to complete the operation.</value>
  </data>
  <data name="Error_CommaWasExpectedInArrayDeclaration" xml:space="preserve">
    <value>Comma symbol was expected in the array declaration.</value>
  </data>
  <data name="Error_ConnectionStringNotConfigured" xml:space="preserve">
    <value>Couldn't find any connection strings in the configuration file.</value>
  </data>
  <data name="Error_ConnectionStringNotInitialized" xml:space="preserve">
    <value>Connection string cannot be null or an empty string.</value>
  </data>
  <data name="Error_CouldNotConvertObjectToType" xml:space="preserve">
    <value>Could not convert the object to the specified type '{0}'.</value>
  </data>
  <data name="Error_CouldNotCreateListType" xml:space="preserve">
    <value>Could not create the necessary list type '{0}'.</value>
  </data>
  <data name="Error_CouldNotMaterializeCollectionLink" xml:space="preserve">
    <value>The provided link can not be materialized since it can not be explicitly converted to the 'Link&lt;TAssociation&gt;' type.</value>
  </data>
  <data name="Error_CouldNotResolveType" xml:space="preserve">
    <value>Could not resolve type '{0}'.</value>
  </data>
  <data name="Error_DepthLimitExceeded" xml:space="preserve">
    <value>Depth limit exceeded.</value>
  </data>
  <data name="Error_DeserializerTypeMismatch" xml:space="preserve">
    <value>Deserializer type mismatch.</value>
  </data>
  <data name="Error_ExpressionMustBeAConstructorCall" xml:space="preserve">
    <value>The provided expression '{0}' must be a constructor call.</value>
  </data>
  <data name="Error_ExtraCommaAtArrayEndingFound" xml:space="preserve">
    <value>Extra comma at array ending found.</value>
  </data>
  <data name="Error_FormatParameterMismatch" xml:space="preserve">
    <value>Index (zero based) must be greater than or equal to zero and less than the size of the argument list.</value>
  </data>
  <data name="Error_IllegalArrayStartingSymbol" xml:space="preserve">
    <value>Invalid array starting symbol.</value>
  </data>
  <data name="Error_IllegalJavaScriptPrimitive" xml:space="preserve">
    <value>Illegal JavaScript primitive.</value>
  </data>
  <data name="Error_IncompatibleCacheProviderType" xml:space="preserve">
    <value>The type '{0}' must implement the ICacheProvider or ITaggedCacheProvider interface and have a public parameterless constructor.</value>
  </data>
  <data name="Error_IncompatibleMaterializerType" xml:space="preserve">
    <value>The type '{0}' must implement the IDbMaterializer interface.</value>
  </data>
  <data name="Error_IncompatibleProviderFactoryType" xml:space="preserve">
    <value>The type '{0}' must implement the IDbDataProviderFactory interface and have a public parameterless constructor.</value>
  </data>
  <data name="Error_InvalidArrayEndingSymbol" xml:space="preserve">
    <value>Invalid array ending symbol.</value>
  </data>
  <data name="Error_InvalidConstructorExpressionType" xml:space="preserve">
    <value>The provided expression constructs objects of '{0}' type, but the type compatible with '{1}' is required.</value>
  </data>
  <data name="Error_InvalidEnumType" xml:space="preserve">
    <value>Invalid enum type '{0}'.</value>
  </data>
  <data name="Error_InvalidEscapeSequence" xml:space="preserve">
    <value>Invalid escape sequence.</value>
  </data>
  <data name="Error_InvalidMemberName" xml:space="preserve">
    <value>Invalid member name.</value>
  </data>
  <data name="Error_InvalidMethodReturnType" xml:space="preserve">
    <value>The provided method returns a value of '{0}' type, but the '{1}' type is required.</value>
  </data>
  <data name="Error_InvalidObjectDefinition" xml:space="preserve">
    <value>Invalid object definition.</value>
  </data>
  <data name="Error_MaximumJsonStringLengthExceeded" xml:space="preserve">
    <value>Maximum JSON string length exceeded.</value>
  </data>
  <data name="Error_MaximumRecursionDepthExceeded" xml:space="preserve">
    <value>Maximum recursion depth exceeded.</value>
  </data>
  <data name="Error_MethodCallMustTargetLambdaArgument" xml:space="preserve">
    <value>Expression parameter '{0}' must target the lambda argument.</value>
  </data>
  <data name="Error_ObjectDisposed" xml:space="preserve">
    <value>Cannot access the '{0}'. The object is disposed.</value>
  </data>
  <data name="Error_OpeningBraceExpected" xml:space="preserve">
    <value>Opening brace expected.</value>
  </data>
  <data name="Error_ParameterMustBeGreaterThan" xml:space="preserve">
    <value>The value of the '{0}' parameter should be greater than {1}.</value>
  </data>
  <data name="Error_ParameterMustBeGreaterThanOrEqual" xml:space="preserve">
    <value>The value of the '{0}' parameter should be greater than or equal to {1}.</value>
  </data>
  <data name="Error_ReaderIsEmpty" xml:space="preserve">
    <value>Cannot read the result set from the closed data reader.</value>
  </data>
  <data name="Error_SelectorMustBeAMethodCall" xml:space="preserve">
    <value>Selector expression '{0}' must be a method call.</value>
  </data>
  <data name="Error_StringIsNotQuoted" xml:space="preserve">
    <value>String is not quoted.</value>
  </data>
  <data name="Error_SuppliedDictionaryTypeIsNotSupported" xml:space="preserve">
    <value>Supplied dictionary type is not supported.</value>
  </data>
  <data name="Error_TypeMustHaveParameterlessConstructor" xml:space="preserve">
    <value>Type '{0}' must have a parameterless constructor.</value>
  </data>
  <data name="Error_UnableToConnect" xml:space="preserve">
    <value>Data provider could not connect to the specified data source.</value>
  </data>
  <data name="Error_UnableToLoadConfiguration" xml:space="preserve">
    <value>Could not parse the configuration file. See the inner exception for details.</value>
  </data>
  <data name="Error_UnsupportedCommandType" xml:space="preserve">
    <value>The database command type '{0}' is not supported by the provider.</value>
  </data>
  <data name="Error_UnterminatedStringConstant" xml:space="preserve">
    <value>Unterminated string constant.</value>
  </data>
  <data name="Error_DataReaderIsClosed" xml:space="preserve">
    <value>Invalid attempt to call {0} when reader is closed.</value>
  </data>
  <data name="Error_InvalidBufferSizeOrIndex" xml:space="preserve">
    <value>Buffer offset '{1}' plus the bytes available '{0}' is greater than the length of the passed in buffer.</value>
  </data>
  <data name="Error_InvalidDataLength" xml:space="preserve">
    <value>Data length '{0}' is less than 0.</value>
  </data>
  <data name="Error_InvalidDestinationBufferIndex" xml:space="preserve">
    <value>Invalid destination buffer (size of {0}) offset: {1}</value>
  </data>
  <data name="Error_InvalidSourceBufferIndex" xml:space="preserve">
    <value>Invalid source buffer (size of {0}) offset: {1}</value>
  </data>
  <data name="Error_IsolationLevelCannotBeModified" xml:space="preserve">
    <value>Isolation level of the operation scope can not be modified since the transaction has already been started.</value>
  </data>
</root>